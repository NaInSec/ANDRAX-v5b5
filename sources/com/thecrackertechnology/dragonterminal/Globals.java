package com.thecrackertechnology.dragonterminal;

import android.support.graphics.drawable.PathInterpolatorCompat;
import com.thecrackertechnology.dragonterminal.SettingsMenu;
import com.thecrackertechnology.dragonterminal.SettingsMenuMisc;
import org.apache.commons.lang3.StringUtils;

public class Globals {
    public static int AccelerometerCenterPos = 2;
    public static int AccelerometerSensitivity = 2;
    public static String[] AppLibraries = {"sdl_native_helpers", "sdl-1.2", "sdl_ttf", "crypto"};
    public static int AppMinimumRAM = 0;
    public static boolean AppNeedsArrowKeys = false;
    public static boolean AppNeedsTextInput = false;
    public static boolean AppNeedsTwoButtonMouse = true;
    public static int AppTouchscreenKeyboardKeysAmount = 3;
    public static String[] AppTouchscreenKeyboardKeysNames = "LCTRL LALT LSHIFT RETURN SPACE DELETE KP_PLUS KP_MINUS 1 2".split(StringUtils.SPACE);
    public static boolean AppUsesAccelerometer = false;
    public static boolean AppUsesGyroscope = false;
    public static boolean AppUsesJoystick = false;
    public static boolean AppUsesMouse = true;
    public static boolean AppUsesMultitouch = true;
    public static boolean AppUsesOrientationSensor = false;
    public static boolean AppUsesSecondJoystick = false;
    public static boolean AppUsesThirdJoystick = false;
    public static int AudioBufferConfig = 0;
    public static boolean AutoDetectOrientation = false;
    public static boolean ClickMouseWithDpad = false;
    public static int ClickScreenPressure = 0;
    public static int ClickScreenTouchspotSize = 0;
    public static String CommandLine = "XSDL";
    public static boolean CompatibilityHacksForceScreenUpdateMouseClick = true;
    public static boolean CompatibilityHacksStaticInit = false;
    public static boolean CompatibilityHacksTextInputEmulatesHwKeyboard = true;
    public static boolean CompatibilityHacksVideo = false;
    public static boolean CreateService = true;
    public static String DataDir = "/data/data/com.thecrackertechnology.dragonterminal/files/usr/share/xorg-neoterm";
    public static String[] DataDownloadUrl = {"!!Data files|:data.tar.gz:data-1.tgz", "!!Data files|:DroidSansMono.ttf:DroidSansMono.ttf", "Additional fonts (90Mb)|:xfonts.tar.gz:http://sourceforge.net/projects/libsdl-android/files/apk/XServer-XSDL/xfonts.tgz/download"};
    public static String DeleteFilesOnUpgrade = "%";
    public static boolean DownloadToSdcard = true;
    public static boolean FingerHover = true;
    public static SettingsMenu.Menu[] FirstStartMenuOptions = {new SettingsMenuMisc.GyroscopeCalibration(), new SettingsMenuMisc.OptionalDownloadConfig()};
    public static boolean FloatingScreenJoystick = false;
    public static boolean ForceHardwareMouse = false;
    public static boolean ForceRelativeMouseMode = true;
    public static boolean GenerateSubframeTouchEvents = false;
    public static SettingsMenu.Menu[] HiddenMenuOptions = new SettingsMenu.Menu[0];
    public static boolean HideSystemMousePointer = false;
    public static String HomeDir = "/data/data/com.thecrackertechnology.dragonterminal/files/home";
    public static boolean HorizontalOrientation = true;
    public static boolean HoverJitterFilter = true;
    public static boolean ImmersiveMode = true;
    public static boolean InhibitSuspend = true;
    public static boolean KeepAspectRatio = KeepAspectRatioDefaultSetting;
    public static boolean KeepAspectRatioDefaultSetting = false;
    public static int LeftClickKey = 23;
    public static int LeftClickMethod = (ForceRelativeMouseMode ? 7 : 0);
    public static int LeftClickTimeout = 3;
    public static boolean MoveMouseWithGyroscope = true;
    public static int MoveMouseWithGyroscopeSpeed = 2;
    public static boolean MoveMouseWithJoystick = false;
    public static int MoveMouseWithJoystickAccel = 0;
    public static int MoveMouseWithJoystickSpeed = 1;
    public static boolean MultiThreadedVideo = false;
    public static int MultitouchGestureSensitivity = 1;
    public static boolean[] MultitouchGesturesUsed = new boolean[4];
    public static boolean NeedDepthBuffer = false;
    public static boolean NeedGles2 = false;
    public static boolean NeedGles3 = false;
    public static boolean NeedStencilBuffer = false;
    public static boolean NonBlockingSwapBuffers = false;
    public static boolean[] OptionalDataDownload = null;
    public static boolean OuyaEmulation = false;
    public static boolean PhoneHasArrowKeys = false;
    public static String ReadmeText = "";
    public static boolean RelativeMouseMovement = ForceRelativeMouseMode;
    public static int RelativeMouseMovementAccel = 0;
    public static int RelativeMouseMovementSpeed = 2;
    public static int[] RemapHwKeycode = new int[255];
    public static int[] RemapMultitouchGestureKeycode = new int[4];
    public static int[] RemapScreenKbKeycode = new int[6];
    public static boolean ResetSdlConfigForThisVersion = false;
    public static int RightClickKey = 82;
    public static int RightClickMethod = (AppNeedsTwoButtonMouse ? 1 : 0);
    public static int RightClickTimeout = 4;
    public static boolean RightMouseButtonLongPress = false;
    public static boolean ScreenFollowsMouse = true;
    public static int[][] ScreenKbControlsLayout = (AppUsesThirdJoystick ? new int[][]{new int[]{0, SDL_1_2_Keycodes.SDLK_RSHIFT, 177, 480}, new int[]{0, 0, 48, 48}, new int[]{400, 392, 488, 480}, new int[]{SDL_1_2_Keycodes.SDLK_RSUPER, 392, 400, 480}, new int[]{400, SDL_1_2_Keycodes.SDLK_LSHIFT, 488, 392}, new int[]{SDL_1_2_Keycodes.SDLK_RSUPER, SDL_1_2_Keycodes.SDLK_LSHIFT, 400, 392}, new int[]{400, 216, 488, SDL_1_2_Keycodes.SDLK_LSHIFT}, new int[]{SDL_1_2_Keycodes.SDLK_RSUPER, 216, 400, SDL_1_2_Keycodes.SDLK_LSHIFT}, new int[]{623, SDL_1_2_Keycodes.SDLK_RSHIFT, 800, 480}, new int[]{623, SDL_1_3_Keycodes.SDLK_FIND, 800, SDL_1_2_Keycodes.SDLK_RSHIFT}} : AppUsesSecondJoystick ? new int[][]{new int[]{0, SDL_1_2_Keycodes.SDLK_RSHIFT, 177, 480}, new int[]{0, 0, 48, 48}, new int[]{400, 392, 488, 480}, new int[]{SDL_1_2_Keycodes.SDLK_RSUPER, 392, 400, 480}, new int[]{400, SDL_1_2_Keycodes.SDLK_LSHIFT, 488, 392}, new int[]{SDL_1_2_Keycodes.SDLK_RSUPER, SDL_1_2_Keycodes.SDLK_LSHIFT, 400, 392}, new int[]{400, 216, 488, SDL_1_2_Keycodes.SDLK_LSHIFT}, new int[]{SDL_1_2_Keycodes.SDLK_RSUPER, 216, 400, SDL_1_2_Keycodes.SDLK_LSHIFT}, new int[]{623, SDL_1_2_Keycodes.SDLK_RSHIFT, 800, 480}} : new int[][]{new int[]{0, SDL_1_2_Keycodes.SDLK_RSHIFT, 177, 480}, new int[]{0, 0, 48, 48}, new int[]{712, 392, 800, 480}, new int[]{624, 392, 712, 480}, new int[]{712, SDL_1_2_Keycodes.SDLK_LSHIFT, 800, 392}, new int[]{624, SDL_1_2_Keycodes.SDLK_LSHIFT, 712, 392}, new int[]{712, 216, 800, SDL_1_2_Keycodes.SDLK_LSHIFT}, new int[]{624, 216, 712, SDL_1_2_Keycodes.SDLK_LSHIFT}});
    public static boolean[] ScreenKbControlsShown = new boolean[ScreenKbControlsLayout.length];
    public static boolean ShowMouseCursor = false;
    public static int ShowScreenUnderFinger = 0;
    public static int StartupMenuButtonTimeout = PathInterpolatorCompat.MAX_NUM_POINTS;
    public static boolean SwVideoMode = true;
    public static final int TOUCHSCREEN_KEYBOARD_CUSTOM = 4;
    public static int TextInputKeyboard = 0;
    public static int[] TouchscreenCalibration = new int[4];
    public static int TouchscreenKeyboardDrawSize = 2;
    public static int TouchscreenKeyboardSize = 1;
    public static int TouchscreenKeyboardTheme = 0;
    public static int TouchscreenKeyboardTransparency = 2;
    public static boolean TvBorders = true;
    public static String UnSecureDataDir = "/data/data/com.thecrackertechnology.dragonterminal/files/usr/share/xorg-neoterm";
    public static boolean UseAccelerometerAsArrowKeys = false;
    public static boolean UseTouchscreenKeyboard = true;
    public static final boolean Using_SDL_1_3 = false;
    public static final boolean Using_SDL_2_0 = false;
    public static int VideoDepthBpp = 16;
    public static boolean VideoLinearFilter = true;
    public static String[] XAPP_LIBS = {"x11_application", "x11_sdl_main"};
    public static String[] XLIBS = {"x11_sdl_native_helpers", "x11_sdl-1.2", "x11_sdl_ttf", "x11_crypto"};
    public static String XLIB_DIR = "/data/data/com.thecrackertechnology.dragonterminal/files/usr/lib/xorg-neoterm";
}
